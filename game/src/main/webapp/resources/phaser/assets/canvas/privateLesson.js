// -- user code here --
/* --- start generated code --- */
// Generated by  1.5.1 (Phaser v2.6.2)

/**
 * privateLesson.
 */
function privateLesson() {
	Phaser.State.call(this);
}

/** @type Phaser.State */
var privateLesson_proto = Object.create(Phaser.State.prototype);
privateLesson.prototype = privateLesson_proto;
privateLesson.prototype.constructor = privateLesson;

var pl_flag;							// Script연습 A타입인지 B타입인지 구분
var pl_charflag = userCharUnicode; 		// 유저의 캐릭터 성별 플래그
var pl_random_start;					//렌덤으로 스테이지 정함
var pl_typeA;							//타입 A
var pl_typeB;							//타입 B

/* 전역 변수 설정 */
var pl_gstage;
var pl_player;
var pl_msgwindow;
var pl_textbox;
var pl_bgm;
var pl_fbgm;
var pl_conversationA;
var pl_conversationB;
var pl_sendData;
var pl_nextbtn;
var pl_nexttext;
var pl_savebtn;
var pl_finalbtn;
var pl_timer;
var pl_isRecording = false; //recording 하는지 여부의 변수
var pl_getResult;
var pl_index = -1;
/* 영어 녹음 파일 */
var pl_recording;
var pl_background;
var pl_exit;

privateLesson.prototype.init = function (item) {
	
	this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
	this.scale.pageAlignHorizontally = true;
	this.scale.pageAlignVertically = true;
	this.stage.backgroundColor = '#ffffff';
	pl_flag = item;
	
	if(episodeKey == 'ok_pp' || episodeKey == 'kb_hl' || episodeKey == 'sp_sb' ||
			episodeKey == 'kt_kk' || episodeKey == 'tk_tt')
	{
		seed_max = eval(episodeKey.substring(0,2)+'_seed_max');//최대값
		seed_min = eval(episodeKey.substring(0,2)+'_seed_min');//최소값
		
		pl_random_start = Math.floor(Math.random() * (seed_max-seed_min) + seed_min);//렌덤으로 스테이지 정함
		pl_typeA = scriptTypeA.get(scriptEp[pl_random_start]);//variables.js확인
		pl_typeB = scriptTypeB.get(scriptEp[pl_random_start]);//variables.js확인
		
		pl_recording = [scriptEp[pl_random_start]+'_01',scriptEp[pl_random_start]+'_02',scriptEp[pl_random_start]+'_03',
			scriptEp[pl_random_start]+'_04',scriptEp[pl_random_start]+'_05',scriptEp[pl_random_start]+'_06'];
	}
	else
	{
		pl_typeA = scriptTypeA.get(episodeKey);//variables.js확인
		pl_typeB = scriptTypeB.get(episodeKey);//variables.js확인
		
		pl_recording = [episodeKey+'_01',episodeKey+'_02',episodeKey+'_03',
			episodeKey+'_04',episodeKey+'_05',episodeKey+'_06'];
	}
};

privateLesson.prototype.create = function () {
	
	// 유저 캐릭터 성별 설정 불러오기
	pl_charflag = userCharUnicode;
	
	/* 배경그림 설정 - DB에서 받은 Key값 반영하기(수정필요) */
	//배경그림 설정  - 이전 state에서 받아온 parameter값(placeName)에 따라 변경
	pl_background = this.add.sprite(-125.0, 2.0, episodeKey+"_bg");
	pl_background.scale.setTo(1.0, 1.0);
	
	/* 플래그에 따라 아바타 설정 */
	if(pl_charflag == "female"){
		if(pl_flag == "A"){
			/* 히어로 캐릭터 설정 */
			pl_gstage = this.add.sprite(501.32203381551983, 187.0878180425451, 'gstand');
			pl_gstage.scale.setTo(0.30679336914925764, 0.3328730255230799);
			/* 유저 캐릭터 설정 */
			pl_player = this.add.sprite(12.0, 192.0, 'femalestand');
			pl_player.scale.setTo(0.29255434526784874, 0.3257476923353662);
		}
		if(pl_flag == "B"){
			/* 히어로 캐릭터 설정 */
			pl_gstage = this.add.sprite(501.32203381551983, 187.0878180425451, 'femalestand');
			pl_gstage.scale.setTo(0.29255434526784874, 0.3257476923353662);
			/* 유저 캐릭터 설정 */
			pl_player = this.add.sprite(12.0, 192.0, 'gstand');
			pl_player.scale.setTo(0.30679336914925764, 0.3328730255230799);
		}
	} // 여자 아바타일 때
	
	if(pl_charflag == "male"){
		if(pl_flag == "A"){
			/* 히어로 캐릭터 설정 */
			pl_gstage = this.add.sprite(501.32203381551983, 187.0878180425451, 'gstand');
			pl_gstage.scale.setTo(0.30679336914925764, 0.3328730255230799);
			/* 유저 캐릭터 설정 */
			pl_player = this.add.sprite(12.0, 192.0, 'malestand');
			pl_player.scale.setTo(0.29255434526784874, 0.3257476923353662);
		}
		if(pl_flag == "B"){
			/* 히어로 캐릭터 설정 */
			pl_gstage = this.add.sprite(501.32203381551983, 187.0878180425451, 'malestand');
			pl_gstage.scale.setTo(0.29255434526784874, 0.3257476923353662);
			/* 유저 캐릭터 설정 */
			pl_player = this.add.sprite(12.0, 192.0, 'gstand');
			pl_player.scale.setTo(0.30679336914925764, 0.3328730255230799);
		}
	} // 남자 아바타일 때
	
	/* 플래그에 따라 객체 화면배치 설정 */
	if(pl_flag == "A"){
		/* 히어로 메세지창  */
		pl_msgwindow = this.add.sprite(321.0, 406.0, 'popup');
		pl_msgwindow.scale.setTo(1.5, 1.2);
		pl_msgwindow.visible = false;
		
		/* 유저 메세지창 */
		pl_textbox = this.add.sprite(37.0, 407.2685843410334, 'textbox', 0);
		pl_textbox.scale.setTo(1.5, 1.6);
		pl_textbox_change = pl_textbox.animations.add('change', [0, 1, 2], 6, true);
		pl_textbox_change.play();
		pl_textbox.visible = false;
		
		/* 점수 표시 텍스트 */
		pl_getResult = this.game.add.text(50, 418, "");
		pl_getResult.visible = false;
		
		/* 다음 메세지 버튼 */
		pl_nexttext = this.add.button(370.0, 540.0,'btn_next', pl_startConvB, this, 0, 1, 0, 1); //650
		pl_nexttext.scale.setTo(0.4, 0.4);
		pl_nexttext.inputEnabled = true;
		pl_nexttext.visible = false;
		
		/* 다음 스테이지 버튼 */
		pl_nextbtn = this.add.button(650.0, 540.0,'btn_next', pl_toNxtStage, this, 0, 1, 0, 1); //650
		pl_nextbtn.scale.setTo(0.4, 0.4);
		pl_nextbtn.inputEnabled = true;
		pl_nextbtn.visible = false;
		
		/* 녹음 시작 버튼 */
		pl_savebtn  = this.add.button(650.0, 540.0,'146x155 button', pl_save, this, 0, 1, 0, 1);
		pl_savebtn.scale.setTo(0.4, 0.4);
		pl_savebtn.visible = false;
		pl_savebtn.inputEnabled = true;//텍스트가 클릭(이벤트)에 반응하도록 만든다.
		
		/* 메세지 위치 설정 */
		pl_conversationA = this.game.add.text(80, 450, "",
					{ font: "15px Arial", fill: "#000000", align: "left" });
		pl_conversationA.visible = false;
		pl_conversationB = this.game.add.text(380, 450, "",
					{ font: "15px Arial", fill: "#000000", align: "left" });
		pl_conversationB.visible = false;
	} // A일 때
	if(pl_flag == "B"){
		
		/* 유저 메세지창  */
		pl_msgwindow = this.add.sprite(321.0, 406.0, 'popup');
		pl_msgwindow.scale.setTo(1.5, 1.2);
		pl_msgwindow.visible = false;
		
		/* 점수 표시 텍스트 */
		pl_getResult = this.game.add.text(680, 450, "");
		pl_getResult.visible = false;
		
		/* 히어로 메세지창 */
		pl_greybox = this.add.sprite(37.0, 407.2685843410334, 'textbox');
		pl_greybox.scale.setTo(1.5, 1.5);
		pl_greybox.visible = false;
		
		/* 다음 메세지 버튼 */
		pl_nexttext = this.add.button(370.0, 540.0,'btn_next', pl_startConvB, this, 0, 1, 0, 1);
		pl_nexttext.scale.setTo(0.4, 0.4);
		pl_nexttext.inputEnabled = true;
		pl_nexttext.visible = false;
		
		/* 다음 스테이지 버튼 */
		pl_nextbtn = this.add.button(650.0, 540.0,'btn_next', pl_toNxtStage, this, 0, 1, 0, 1);
		pl_nextbtn.scale.setTo(0.4, 0.4);
		pl_nextbtn.inputEnabled = true;
		pl_nextbtn.visible = false;
		
		/* 녹음 시작 버튼 */
		pl_savebtn = this.add.button(370.0, 540.0,'146x155 button', pl_save, this, 0, 1, 0, 1);
		pl_savebtn.scale.setTo(0.4, 0.4);
		pl_savebtn.visible = false;
		pl_savebtn.inputEnabled = true;//텍스트가 클릭(이벤트)에 반응하도록 만든다.
		
		/* 메세지 위치 설정 */
		pl_conversationA = this.game.add.text(380, 450, "",
				{ font: "15px Arial", fill: "#000000", align: "left" });
		pl_conversationA.visible = false;
		pl_conversationB = this.game.add.text(80, 450, "",
					{ font: "15px Arial", fill: "#000000", align: "left" });
		pl_conversationB.visible = false;
	} // B일 때
	
    /* 제일 처음 재생되는 녹음파일 설정 */
    pl_fbgm = this.add.audio(pl_recording[0]);

    // 나가기 버튼
    pl_exit = this.game.add.button(1.0, 1.0, 'store_exit',pl_backToMiniMap, this, 0, 1, 0, 1);
    pl_exit.scale.setTo(0.4, 0.4);
    pl_exit.inputEnabled=true;
    pl_exit.input.useHandCursor=true;    
    
    /* A타입을 연습할지 B타입을 연습할지에 따라 나뉨 */
    // A 일본어로 시작 , B 영어로 시작
	if(pl_flag == "A"){
		pl_textbox.visible = true;
		var typeASplit = pl_minFifth(pl_typeA[0]);
		pl_conversationA.setText(typeASplit,true);
		pl_conversationA.visible = true;
		
		pl_fbgm.play();
		pl_fbgm.onStop.add(pl_showBtn, this);
		
		 if(pl_fbgm.isPlaying){
				pl_nexttext.visible = false;
			}
		
		pl_changeNumber(pl_flag);
	} // A일 떄
	if(pl_flag == "B"){
		pl_greybox.visible = true;
		pl_conversationB.visible = true;
		var typeBSplit = pl_minFifth(pl_typeB[0]);
		pl_conversationB.setText(typeBSplit,true);
		
		pl_fbgm.play();
		pl_fbgm.onStop.add(pl_showBtn, this);
		
		 if(pl_fbgm.isPlaying){
				pl_nexttext.visible = false;
			}
		pl_changeNumber(pl_flag);
	} // B일 때
};

privateLesson.prototype.update = function () {
	/* 음성파일 선언 */
	pl_bgm = this.add.audio(pl_recording[pl_index+1]);
	// 5초 카운트
	this.game.debug.text("カウント: " + this.game.time.events.duration, 60, 32);
};

/* 인덱스 카운트 늘리는 함수 */
function pl_changeNumber(item) {
    if(pl_index < 5) {
    	pl_index++;
    }
    pl_hitNext(pl_index);
}

/* 다음 메세지로 변경 함수 */
function pl_hitNext(item) {
	pl_nexttext.visible = false;
	
	if(pl_flag == "A"){
		if(item % 2 != 0){
			
			pl_nexttext.reset(650.0, 496.0);
			pl_textbox.visible = false;
			pl_msgwindow.visible = true;
			
			pl_conversationA.visible = false;
			pl_conversationB.visible = true;
			var typeASplit = pl_minFifth(pl_typeA[item]);
			pl_conversationB.setText(typeASplit,true);
			if(item == 5){
				pl_nextbtn.visible = true;
				pl_nextbtn.reset(650.0, 496.0);
				pl_nexttext.visible = false;
				}
		}
	}
	if(pl_flag == "B"){
		if(item%2 == 0){
			pl_msgwindow.visible = false;
			pl_greybox.visible = true;
			pl_nexttext.reset(370.0, 496.0);
			
			pl_conversationA.visible = false;
			pl_conversationB.visible = true;
			var typeBSplit = pl_minFifth(pl_typeB[item]);
			pl_conversationB.setText(typeBSplit,true);
			if(item == 5){
				pl_nextbtn.visible = true;
				pl_nextbtn.reset(370.0, 496.0);
				pl_nexttext.visible = false;
				}
		}
	}
}

/* 다음 녹음파일 재생  */
function pl_startConvB(){
	
		pl_getResult.visible = false;
		pl_nexttext.visible = false;
	
	if(pl_flag == "A"){
		pl_msgwindow.visible = false;
		pl_textbox.visible = true;
		pl_conversationB.visible = false;
		pl_conversationA.visible = true;
		var typeASplit = pl_minFifth(pl_typeA[pl_index+1]);
		pl_conversationA.setText(typeASplit,true);
		
		/* 음성파일 실행 */
	    pl_bgm.play();
		pl_bgm.onStop.add(pl_showBtn, this);
	    pl_changeNumber(pl_index);
	}
	if(pl_flag == "B"){
		pl_msgwindow.visible = true;
		pl_greybox.visible = false;
		pl_conversationA.visible = true;
		pl_conversationB.visible = false;
		var typeBSplit = pl_minFifth(pl_typeB[pl_index+1]);
		pl_conversationA.setText(typeBSplit,true);
		
		/* 음성파일 실행 */
	    pl_bgm.play();
		pl_bgm.onStop.add(pl_showBtn, this);
	    pl_changeNumber(pl_index);
	}
}

// 텍스트 줄바꿈
function pl_minFifth(str) {
    var pl_lengthFlag = false;
	var strArr = "";
    var pl_textArray = new Array();
    pl_textArray = str.split(/[.。]+/);
    
    for(var i in pl_textArray){
    	var regexp = /[A-Z]/gi;
    	if(pl_textArray[i].match(regexp) != null){
    		//영문 스크립트 (50자까지)
    		if(pl_textArray[i].length > 50){
        		pl_lengthFlag = false;
            	for(var i in pl_textArray){
        		    strArr += pl_textArray[i].substring(0,50);
        		    strArr += "\n";
        		    strArr += pl_textArray[i].substring(50);
            	}
        	}else{
        		strArr += pl_textArray[i];
        		strArr += "\n";
        	}
    	}else if(pl_textArray[i].match(regexp) == null){
    		//일문 스크립트 (25자까지)
    		if(pl_textArray[i].length > 24){
        		pl_lengthFlag = false;
            	for(var i in pl_textArray){
        		    strArr += pl_textArray[i].substring(0,24);
        		    strArr += "\n";
        		    strArr += pl_textArray[i].substring(24);
            	}
        	}else{
		    	strArr += pl_textArray[i];
		    	strArr += "\n";
		    }
    	}else{
    		pl_lengthFlag = true;
    	}
    }

    if(pl_lengthFlag == false){
    	return strArr;
    }else{
    	return str;
    }
}

/* 녹음버튼, 중지버튼 활성화 */
function pl_showBtn(){
	if(pl_flag == 'A'){
		if(pl_index % 2 == 1){
			if(!pl_bgm.isPlaying){
				pl_nexttext.visible = true;
			}
			
	    }else{
		pl_savebtn.reset(370.0, 496.0);
		pl_savebtn.visible = true;
	    }
	}
	if(pl_flag == 'B'){
		if(pl_index % 2 == 0){
			if(!pl_bgm.isPlaying){
				pl_savebtn.visible = false;
				pl_nexttext.visible = true;
			}
	    }else{
		pl_savebtn.reset(650.0, 496.0);
		pl_savebtn.visible = true;
	    }
	}
}

/* 녹음 중지 버튼 + 다음메세지 버튼 활성화 */
function pl_recordStop(){
	pl_getResult.setText(analysis_score+"点");
	
	if(pl_index == 5){
		pl_savebtn.destroy(true);
		pl_getResult.visible = true;
		pl_nextbtn.visible = true;
	}
	if(pl_flag == 'A'){
		if(pl_index % 2 == 0){
			pl_savebtn.visible = false;
			pl_getResult.visible = true;
			pl_nexttext.visible = true;
		}
	}else{
		if(pl_index % 2 == 1){
			pl_savebtn.visible = false;
			pl_getResult.visible = true;
			pl_nexttext.visible = true;
		}
	}
	
	pl_savebtn.visible = false;
	pl_nexttext.visible = true;
	if(pl_flag == 'A'){
		pl_nexttext.reset(370.0, 496.0);
	}else{
		pl_nexttext.reset(650.0, 496.0);
	}
	if(pl_index == 5){
		pl_nexttext.visible = false;
	}
}

/* 녹음 시작 버튼 */
function pl_save(){
	if(pl_isRecording == false)
	{
		var xhrPL = new XMLHttpRequest(); // 유저 스크립트 세션값 셋팅
		xhrPL.open("post", "/"+ctx+"/setScriptTarget", true); // xmlHttp로 접근할컨트롤러
		xhrPL.send((pl_index));
		pl_isRecording = true;
		toggleRecording();
	}
	else
	{
		pl_isRecording = false;
		toggleRecording();
		var xhr=new XMLHttpRequest();
		xhr.onload=function(e) {
			if(this.readyState === 4) {
				analysis_score = e.target.responseText;
		    }
		};
		xhr.open("POST","/"+ctx+"/getScore",true);
		xhr.send();
		  
		//5초뒤에 실행되도록 함 
		this.game.time.events.add(Phaser.Timer.SECOND * 5, pl_recordStop, this);
	}
}

/* 화면 전환 함수 - 게임 중도 포기시 */
function pl_backToMiniMap(){
	// 전역변수 초기화
	pl_index = -1;
	pl_bgm.mute = true;
	pl_bgm.pause();
	pl_bgm.destroy(true);
	
	if(episodeKey == 'tk_tt'){
		this.game.state.start('tk_tt');
	}else if(episodeKey == 'ok_pp') {
		this.game.state.start('ok_pp');
	}else{
		this.game.state.start('fieldModule');
	}
}

/* 화면 전환 함수  - 클리어시 */
function pl_toNxtStage(){
	// 전역변수 초기화
	pl_index = -1;
	pl_bgm.mute = true;
	pl_bgm.pause();
	pl_bgm.destroy(true);
	
	// DB에 클리어 여부 저장
	var pl_clearResult = "";
	if(pl_flag == 'A'){
		pl_clearResult = episodeKey+"A";
	}else{
		pl_clearResult = episodeKey+"B";
	}
	
	var xhrResult = new XMLHttpRequest(); // 아이템 전체목록
	xhrResult.onload = function(e) {
		if(this.readyState === 4) {
			
		}// if
	}// onload
	xhrResult.open("post", "/"+ctx+"/updateUserStudy", true); // xmlHttp로 접근할컨트롤러
	xhrResult.send(pl_clearResult);
	
	if(episodeKey == 'tk_tt'){
		this.game.state.start('tk_tt');
	}else if(episodeKey == 'ok_pp') {
		this.game.state.start('ok_pp');
	}else{
		this.game.state.start('fieldModule');
	}
}
