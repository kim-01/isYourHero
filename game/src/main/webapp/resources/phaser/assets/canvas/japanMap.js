
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.1 (Phaser v2.6.2)


/**
 * japanMap.
 */
function japanMap() {
	Phaser.State.call(this);
}

/** @type Phaser.State */
var japanMap_proto = Object.create(Phaser.State.prototype);
japanMap.prototype = japanMap_proto;
japanMap.prototype.constructor = japanMap;

japanMap.prototype.init = function () {
	this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
	this.scale.pageAlignHorizontally = true;
	this.scale.pageAlignVertically = true;
	this.stage.backgroundColor = '#ffffff';
};

/* 전역 변수 설정 */
var kobePointer;
var kyotoPointer;
var okinawaPointer;
var sapporoPointer;
var tokyoPointer;
var jm_bgm;
var jm_msgwrite;
var jm_yesbtn;
var jm_nobtn;
var jm_msg;

japanMap.prototype.create = function () {
	
	//jm_mapflag가 4가되면 최종 스테이지 도쿄가 활성화
	if(kobeResult == true){
		jm_mapflag++;
	}
	if(kyotoResult == true){
		jm_mapflag++;
	}
	if(okinawaResult == true){
		jm_mapflag++;
	}
	if(sapporoResult == true){
		jm_mapflag++;
	}

	/* 배경 지도 설정 */
	var japanMap = this.add.sprite(-10.0, -4.0, 'japanMap(color)');
	japanMap.scale.setTo(0.3995814599167393, 0.4470399940172768);
	
	/* 지표 설정 */
	kobePointer = this.add.sprite(334.0, 302.0, 'kobeP', 0);
	kobePointer.scale.setTo(0.3995814599167393, 0.4470399940172768);
	kobePointer.animations.add('jump', [0, 1], 4, true);
	kobePointer.play('jump');
	kobePointer.inputEnabled = true;
	kobePointer.events.onInputDown.add(toZoomIn,this);
	
	kyotoPointer = this.add.sprite(368.0, 313.0, 'kyotoP', 0);
	kyotoPointer.scale.setTo(0.3995814599167393, 0.4470399940172768);
	kyotoPointer.animations.add('jump', [0, 1], 4, true);
	kyotoPointer.play('jump');
	kyotoPointer.inputEnabled = true;
	kyotoPointer.events.onInputDown.add(toZoomIn, this);
	
	okinawaPointer = this.add.sprite(90.0, 440.0, 'okinawaP', 0);
	okinawaPointer.scale.setTo(0.3995814599167393, 0.4470399940172768);
	okinawaPointer.animations.add('jump', [0, 1], 4, true);
	okinawaPointer.play('jump');
	okinawaPointer.inputEnabled = true;
	okinawaPointer.events.onInputDown.add(toZoomIn, this);
	
	sapporoPointer = this.add.sprite(648.0, 38.0, 'sapporoP', 0);
	sapporoPointer.scale.setTo(0.3995814599167393, 0.4470399940172768);
	sapporoPointer.animations.add('jump', [0, 1], 4, true);
	sapporoPointer.play('jump');
	sapporoPointer.inputEnabled = true;
	sapporoPointer.events.onInputDown.add(toZoomIn, this);
	
	tokyoPointer = this.add.sprite(510.0, 327.0, 'tokyoP', 0);
	tokyoPointer.scale.setTo(0.3995814599167393, 0.4470399940172768);
	tokyoPointer.animations.add('jump', [0, 1], 4, true);
	tokyoPointer.play('jump');
	tokyoPointer.inputEnabled = true;
	tokyoPointer.events.onInputDown.add(toZoomIn, this);
	tokyoPointer.visible = false;
	
	if(jm_mapflag == 4){
		tokyoPointer.visible = true;
	}else{
		tokyoPointer.visible = false;
	}
	
	/* 메세지 창 설정 */
	jm_msg = this.add.sprite(0.0, 463.37686917294855, 'msg');
	jm_msg.scale.setTo(0.695, 0.32087911607758396);
	jm_msg.alpha = 0.7;
	jm_msg.fixedToCamera = true;
	jm_msg.visible = false;

	/* no 버튼 설정 */
	jm_nobtn = this.add.button(660.0, 510.0, 'btn_nope', jm_cancel, this, 0, 1, 0, 1);// 버튼 위치, 이미지명
	jm_nobtn.scale.setTo(0.5, 0.5); // 버튼 사이즈
	jm_nobtn.inputEnabled = true; // 클릭 이벤트 인식 활성화
	jm_nobtn.visible = false; // 버튼 보이기 비활성화
	
	/* 메세지 내용 설정 */
	jm_msgwrite = this.add.text(60.0, 490.0, '', 
			{ font: "bold 25px Arial", fill: "#000000", align: "left" });
	
	/* 배경음악 설정 */
	jm_bgm = this.add.audio('Opening_showMap');
	jm_bgm.play(); // 배경음악 재생
	jm_bgm.loopFull(); // 배경음악 무한반복
};

/* --- end generated code --- */
// -- user code here --

/* 좌표 클릭시 메세지창 띄우는 함수 */
function toZoomIn(item){
	jm_msg.visible = true;
	jm_msgwrite.visible = true;
	jm_nobtn.visible = true;
	
	if(item.x == 334 && item.y == 302){
		jm_msgwrite.setText("神戸を救いに行きましょう！",true);
		kyotoPointer.inputEnabled = false;
		okinawaPointer.inputEnabled = false;
		sapporoPointer.inputEnabled = false;
		tokyoPointer.inputEnabled = false;
		placeName = "kobe";
		jm_yesbtn = this.add.button(580.0, 510.0, 'btn_yes', toMoveNext, this, 0, 1, 0, 1);// 버튼 위치, 이미지명
	}
	else if(item.x == 368 && item.y == 313){
		jm_msgwrite.setText("京都を救いに行きましょう！",true);
		kobePointer.inputEnabled = false;
		okinawaPointer.inputEnabled = false;
		sapporoPointer.inputEnabled = false;
		tokyoPointer.inputEnabled = false;
		placeName = "kyoto";
		jm_yesbtn = this.add.button(580.0, 510.0, 'btn_yes', toMoveNext, this, 0, 1, 0, 1);// 버튼 위치, 이미지명
	}
	else if(item.x == 90 && item.y == 440){
		jm_msgwrite.setText("沖縄を救いに行きましょう！",true);
		kobePointer.inputEnabled = false;
		kyotoPointer.inputEnabled = false;
		sapporoPointer.inputEnabled = false;
		tokyoPointer.inputEnabled = false;
		placeName = "okinawa";
		jm_yesbtn = this.add.button(580.0, 510.0, 'btn_yes', toMoveNext, this, 0, 1, 0, 1);// 버튼 위치, 이미지명
	}
	else if(item.x == 648 && item.y == 38){
		jm_msgwrite.setText("札幌を救いに行きましょう！",true);
		kobePointer.inputEnabled = false;
		kyotoPointer.inputEnabled = false;
		okinawaPointer.inputEnabled = false;
		tokyoPointer.inputEnabled = false;
		placeName = "sapporo";
		jm_yesbtn = this.add.button(580.0, 510.0, 'btn_yes', toMoveNext, this, 0, 1, 0, 1);// 버튼 위치, 이미지명
	}
	else{
		jm_msgwrite.setText("東京を救いに行きましょう！",true);
		kobePointer.inputEnabled = false;
		kyotoPointer.inputEnabled = false;
		sapporoPointer.inputEnabled = false;
		okinawaPointer.inputEnabled = false;
		placeName = "tokyo";
		jm_yesbtn = this.add.button(580.0, 510.0, 'btn_yes', toMoveNext, this, 0, 1, 0, 1);// 버튼 위치, 이미지명
	}
	/* yes 버튼 설정 */
	jm_yesbtn.scale.setTo(0.5, 0.5); // 버튼 사이즈
	jm_yesbtn.inputEnabled = true; // 클릭 이벤트 인식 활성화
}

/* 해당 스테이지로 이동하는 함수 */
function toMoveNext(){
	jm_bgm.pause();
	jm_bgm.destroy();
	this.game.state.start(placeName);
}

/* 아니오 눌렀을 때 함수 */
function jm_cancel(){
	jm_msg.visible = false;
	jm_msgwrite.visible = false;
	jm_yesbtn.visible = false;
	jm_nobtn.visible = false;
	
	// 각 지표 활성화 
	kobePointer.inputEnabled = true;
	kyotoPointer.inputEnabled = true;
	okinawaPointer.inputEnabled = true;
	tokyoPointer.inputEnabled = true;
	sapporoPointer.inputEnabled = true;
}
