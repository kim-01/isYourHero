
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.1 (Phaser v2.6.2)


/**
 * kobe.
 */
function kobe() {
	
	Phaser.State.call(this);
	
}

/** @type Phaser.State */
var kobe_proto = Object.create(Phaser.State.prototype);
kobe.prototype = kobe_proto;
kobe.prototype.constructor = kobe;

kobe.prototype.init = function () {
	
	this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
	this.scale.pageAlignHorizontally = true;
	this.scale.pageAlignVertically = true;
	this.stage.backgroundColor = '#ffffff';
	current_spot = "kobe";
};

/** 사진 */
var kb_haver; 					// 하버랜드 사진
var kb_port; 					// 포트타워 사진
var kb_himeji; 					// 히메지 사진
var kb_roco; 					// 롯코산 사진
var kb_kitano; 					// 키타노 사진

/** 좌표버튼 */
var haver_btn; 					// 하버랜드 좌표버튼
var port_btn;					// 포트타워 좌표버튼
var himeji_btn; 				// 히메지 좌표버튼
var roco_btn;					// 롯코산 좌표버튼
var kitano_btn; 				// 키타노 좌표버튼

/** 확대 사진 */
var haver_zum; 					// 하버랜드 확대
var port_zum;					// 포트타워 확대
var himeji_zum; 				// 히메지 확대
var roco_zum; 					// 롯코산 확대
var kitano_zum;					// 키타노 확대

/** 각각 관광지 이미지의 확대여부에 대한 변수 */
var haver_iszum = null;	
var port_iszum = null;
var himeji_iszum = null;
var roco_iszum = null;
var kitano_iszum = null;

/** 기타 소재 */
var kb_toStore; 					// 상점이동버튼
var kb_confmove; 					// 페이지 이동시 묻는 창
var kb_yesbtn;
var kb_nobtn;
var kb_msgwrite;
var kb_bgm;	

/** 별점 표현 */
var kb_stars;						// 그룹별
var kb_samount;						// 남은 별 갯수
var kb_smax = 3;					// 최대 별 갯수

/** 지표 클릭 여부 확인 - 페이지 이동 Flag */
var haver_clicked = false;			// 하버랜드
var port_clicked = false;			// 포트타워
var himeji_clicked = false;			// 히메지
var roco_clicked = false;			// 롯코산
var kitano_clicked = false;			// 키타노

kobe.prototype.preload = function () {
	
	this.load.pack('images', 'assets/pack.json');
	this.load.pack('audio', 'assets/pack.json');
	
};

kobe.prototype.create = function () {
	var _kobeMap = this.add.sprite(0.0, 0.0, 'kobeMap');
	_kobeMap.scale.setTo(1.3163934994904505, 1.519999996382306);
	
	// bgm
	kb_bgm = this.add.audio('SelectArea');
	kb_bgm.play();
	kb_bgm.loopFull();
	
	kb_toStore = this.add.button(655.0, 462.0, 'btn_store', kb_gotoStore, this, 0, 1, 0, 1);
	kb_toStore.scale.setTo(0.9, 0.9);

	haver_btn = this.add.button(375.0, 312.0, 'kb_hc_click',thumbHaver, this, 0, 1, 0, 1);
	haver_btn.scale.setTo(0.35, 0.35);
	haver_btn.inputEnabled=true;

	himeji_btn = this.add.button(245.0, 162.0, 'kb_hs_click',thumbHimeji, this, 0, 1, 0, 1);
	himeji_btn.scale.setTo(0.35, 0.35);
	himeji_btn.inputEnabled=true;
	
	kitano_btn = this.add.button(242.0, 333.0, 'kb_kn_click',thumbKitano, this, 0, 1, 0, 1);
	kitano_btn.scale.setTo(0.35, 0.35);
	kitano_btn.inputEnabled=true;
	
	port_btn = this.add.button(491.0, 232.0, 'kb_pt_click',thumbPort, this, 0, 1, 0, 1);
	port_btn.scale.setTo(0.35, 0.35);
	port_btn.inputEnabled=true;
	
	roco_btn = this.add.button(391.0, 115.0, 'kb_rs_click',thumbRoco, this, 0, 1, 0, 1);
	roco_btn.scale.setTo(0.35, 0.35);
	roco_btn.inputEnabled=true;
	
	
	kb_haver = this.add.sprite(365.0, 238.0, 'kb_hc_thumb');
	kb_haver.scale.setTo(0.1, 0.1);
	kb_haver.visible = false;
	
	kb_himeji = this.add.sprite(228.0, 260.0, 'kb_hs_thum');
	kb_himeji.scale.setTo(0.1, 0.1);
	kb_himeji.visible = false;
	
	kb_kitano = this.add.sprite(233.0, 82.0, 'kb_kn_thumb');
	kb_kitano.scale.setTo(0.1, 0.1);
	kb_kitano.visible = false;
	
	kb_port = this.add.sprite(481.0, 147.0, 'kb_pt_thumb');
	kb_port.scale.setTo(0.1, 0.1);
	kb_port.visible = false;

	kb_roco = this.add.sprite(384.0, 36.0, 'kb_rs_thumb');
	kb_roco.scale.setTo(0.1, 0.1);
	kb_roco.visible = false;

	// 클릭시 사진확대 및 팝업 좌표 설정
	// 하버시티
	haver_zum = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY, 'kb_hc_thumb');
	haver_zum.alpha = 0.8;
	haver_zum.anchor.set(0.5);
	haver_zum.inputEnabled = true;
	haver_zum.events.onInputDown.add(haverZoom, this);
	haver_zum.scale.set(0.5);  //확대사진 사이즈
	haver_zum.visible = false;

	// 히메지
	himeji_zum = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY, 'kb_hs_thum');
	himeji_zum.alpha = 0.8;
	himeji_zum.anchor.set(0.5);
	himeji_zum.inputEnabled = true;
	himeji_zum.events.onInputDown.add(himejiZoom, this);
	himeji_zum.scale.set(0.5); // 확대사진 사이즈
	himeji_zum.visible = false;

	// 키타노
	kitano_zum = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY, 'kb_kn_thumb');
	kitano_zum.alpha = 0.8;
	kitano_zum.anchor.set(0.5);
	kitano_zum.inputEnabled = true;
	kitano_zum.events.onInputDown.add(kitanoZoom, this);
	kitano_zum.scale.set(0.5); //확대사진 사이즈
	kitano_zum.visible = false;

	// 포트타워
	port_zum = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY, 'kb_pt_thumb');
	port_zum.alpha = 0.8;
	port_zum.anchor.set(0.5);
	port_zum.inputEnabled = true;
	port_zum.events.onInputDown.add(portZoom, this);
	port_zum.scale.set(0.5); //확대사진 사이즈
	port_zum.visible = false;

	// 롯코산
	roco_zum = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY, 'kb_rs_thumb');
	roco_zum.alpha = 0.8;
	roco_zum.anchor.set(0.5);
	roco_zum.inputEnabled = true;
	roco_zum.events.onInputDown.add(rocoZoom, this);
	roco_zum.scale.set(0.5); //확대사진 사이즈
	roco_zum.visible = false;
	
	kb_confmove = this.add.sprite(200.0, 231.0, 'popup');
	kb_confmove.scale.setTo(1.5, 1.0);
	kb_confmove.alpha = 0.7;
	kb_confmove.visible = false;
	
	kb_exit = this.game.add.button(13.0, 16.0, 'btn_exit',kb_goJapanMap, this, 0, 1, 0, 1);
	kb_exit.scale.setTo(0.4, 0.4);
	kb_exit.inputEnabled=true;
	kb_exit.input.useHandCursor=true;
	
	kb_nobtn= this.game.add.button(585.0, 305.0, 'btn_nope',kb_cancel,this,0,1,0,1);
	kb_nobtn.scale.setTo(0.4, 0.4);
	kb_nobtn.inputEnabled = true;
	kb_nobtn.visible = false;
	
	kb_yesbtn = this.game.add.button(524.0, 305.0, 'btn_yes',kb_changePlace,this,0,1,0,1);
	kb_yesbtn.scale.setTo(0.4, 0.4);
	kb_yesbtn.inputEnabled = true;
	kb_yesbtn.visible = false;
	
	//메시지
	kb_msgwrite = this.add.text(220,260,'', {font : "bold 25px Arial", fill : "#000000", align : "left"});
	
	//별그룹
	kb_stars=this.add.group();
	
	/** 각 관광지 지표에 별점 찍기 */ 
	// 별의 갯수는 3최대개 /  60점 미만이면 빈 별만 3개
	//하버시티	
	if (kb_hl_rs >= 60) {
		kb_samount = Math.round(kb_hl_rs - 60) / 10;
		if (kb_samount > 3 && kb_samount <= 4) {
			kb_samount = 3;
		} else if (kb_samount > 0 && kb_samount <= 3) {
			kb_samount = Math.round(kb_hl_rs - 60) / 10;
		} else {
			kb_samount = 0;
		}
		for (var i = 0; i < kb_samount; i++) {
			var starr = kb_stars.create(490 + (i * 30), 195, 'stars(36x36)', 0);
			starr.scale.setTo(0.7, 0.7);
		}
		for (var i = 0; i < kb_smax - kb_samount; i++) {
			var starr = kb_stars.create(550 - (i * 30), 195, 'stars(36x36)', 1);
			starr.scale.setTo(0.7, 0.7);
		}
	} else if (kb_hl_rs < 60) {
		// 60점 밑이면 빈별세개찍히게
		for (var i = 0; i < 3; i++) {
			var starr = kb_stars.create(550 - (i * 30), 195, 'stars(36x36)', 1);
			starr.scale.setTo(0.7, 0.7);
		}
	}
	
	// 히메지
	if (kb_hc_rs >= 60) {
		kb_samount = Math.round(kb_hc_rs - 60) / 10;
		if (kb_samount > 3 && kb_samount <= 4) {
			kb_samount = 3;
		} else if (kb_samount > 0 && kb_samount <= 3) {
			kb_samount = Math.round(kb_hc_rs - 60) / 10;
		} else {
			kb_samount = 0;
		}
		for (var i = 0; i < kb_samount; i++) {
			var starr = kb_stars.create(240 + (i * 30), 125, 'stars(36x36)', 0);
			starr.scale.setTo(0.7, 0.7);
		}
		for (var i = 0; i < kb_smax - kb_samount; i++) {
			var starr = kb_stars.create(300 - (i * 30), 125, 'stars(36x36)', 1);
			starr.scale.setTo(0.7, 0.7);
		}
	} else if (kb_hc_rs < 60) {
		for (var i = 0; i < 3; i++) {
			var starr = kb_stars.create(300 - (i * 30), 125, 'stars(36x36)', 1);
			starr.scale.setTo(0.7, 0.7);
		}
	}
	
  	// 키타노
	if (kb_kn_rs >= 60) {
		kb_samount = Math.round(kb_kn_rs - 60) / 10;
		if (kb_samount > 3 && kb_samount <= 4) {
			kb_samount = 3;
		} else if (kb_samount > 0 && kb_samount <= 3) {
			kb_samount = Math.round(kb_kn_rs - 60) / 10;
		} else {
			kb_samount = 0;
		}
		for (var i = 0; i < kb_samount; i++) {
			var starr = kb_stars.create(240 + (i * 30), 300, 'stars(36x36)', 0);
			starr.scale.setTo(0.7, 0.7);
		}
		for (var i = 0; i < kb_smax - kb_samount; i++) {
			var starr = kb_stars.create(300 - (i * 30), 300, 'stars(36x36)', 1);
			starr.scale.setTo(0.7, 0.7);
		}
	} else if (kb_kn_rs < 60) {
		for (var i = 0; i < 3; i++) {
			var starr = kb_stars.create(300 - (i * 30), 300, 'stars(36x36)', 1);
			starr.scale.setTo(0.7, 0.7);
		}
	}
	
	// 포트타워
	if (kb_pt_rs >= 60) {
		kb_samount = Math.round(kb_pt_rs - 60) / 10;
		if (kb_samount > 3 && kb_samount <= 4) {
			kb_samount = 3;
		} else if (kb_samount > 0 && kb_samount <= 3) {
			kb_samount = Math.round(kb_pt_rs - 60) / 10;
		} else {
			kb_samount = 0;
		}
		for (var i = 0; i < kb_samount; i++) {
			var starr = kb_stars.create(380 + (i * 30), 280, 'stars(36x36)', 0);
			starr.scale.setTo(0.7, 0.7);
		}
		for (var i = 0; i < kb_smax - kb_samount; i++) {
			var starr = kb_stars.create(440 - (i * 30), 280, 'stars(36x36)', 1);
			starr.scale.setTo(0.7, 0.7);
		}
	} else if (kb_pt_rs < 60) {
		for (var i = 0; i < 3; i++) {
			var starr = kb_stars.create(440 - (i * 30), 280, 'stars(36x36)', 1);
			starr.scale.setTo(0.7, 0.7);
		}
	}
	
	// 롯코산
	if (kb_rs_rs >= 60) {
		kb_samount = Math.round(kb_rs_rs - 60) / 10;
		if (kb_samount > 3 && kb_samount <= 4) {
			kb_samount = 3;
		} else if (kb_samount > 0 && kb_samount <= 3) {
			kb_samount = Math.round(kb_rs_rs - 60) / 10;
		} else {
			kb_samount = 0;
		}
		for (var i = 0; i < kb_samount; i++) {
			var starr = kb_stars.create(395 + (i * 30), 80, 'stars(36x36)', 0);
			starr.scale.setTo(0.7, 0.7);
		}
		for (var i = 0; i < kb_smax - kb_samount; i++) {
			var starr = kb_stars.create(455 - (i * 30), 80, 'stars(36x36)', 1);
			starr.scale.setTo(0.7, 0.7);
		}
	} else if (kb_rs_rs < 60) {
		for (var i = 0; i < 3; i++) {
			var starr = kb_stars.create(455 - (i * 30), 80, 'stars(36x36)', 1);
			starr.scale.setTo(0.7, 0.7);
		}
	}
	
};



/** 해당 지표를 클릭하면 확대 사진을 보여주는 함수 */
function thumbHaver() {
	haver_zum.visible = true;
	kb_haver.visible = false;
	port_btn.visible = false;
	himeji_btn.visible = false;
	roco_btn.visible = false;
	kitano_btn.visible = false;
	kb_stars.visible = false;

	// 위에있는 popup 사이즈와 같게 해줘야한다.
	if ((haver_iszum !== null && haver_iszum.isRunning) || haver_zum.scale.x === 0.5 && haver_zum.scale.y === 0.5) {
		return;
	}
	haver_iszum = this.game.add.haver_iszum(haver_zum.scale).to({x : 0.5, y : 0.8}, 1000, Phaser.Easing.Elastic.Out, true);
}

function thumbHimeji() {
	himeji_zum.visible = true;
	kb_himeji.visible = false;
	haver_btn.visible = false;
	himeji_btn.visible = false;
	roco_btn.visible = false;
	kitano_btn.visible = false;
	kb_stars.visible = false;
	
	if ((himeji_iszum !== null && himeji_iszum.isRunning) || himeji_zum.scale.x === 0.5) {
		return;
	}
	himeji_iszum = this.game.add.himeji_iszum(himeji_zum.scale).to({x : 1, y : 1}, 1000, Phaser.Easing.Elastic.Out, true);
}

function thumbKitano() {
	kitano_zum.visible = true;
	kb_kitano.visible = false;
	haver_btn.visible = false;
	port_btn.visible = false;
	roco_btn.visible = false;
	kitano_btn.visible = false;
	kb_stars.visible = false;
	
	if ((kitano_iszum !== null && kitano_iszum.isRunning) || kitano_zum.scale.x === 0.5 && kitano_zum.scale.y === 0.5) {
		return;
	}
	kitano_iszum = this.game.add.kitano_iszum(kitano_zum.scale).to({x : 1,	y : 1}, 1000, Phaser.Easing.Elastic.Out, true);
}

function thumbPort() {
	port_zum.visible = true;
	kb_port.visible = false;
	haver_btn.visible = false;
	port_btn.visible = false;
	himeji_btn.visible = false;
	kitano_btn.visible = false;
	kb_stars.visible = false;
	
	if ((port_iszum !== null && port_iszum.isRunning) || port_zum.scale.x === 0.5) {
		return;
	}
	port_iszum = this.game.add.port_iszum(port_zum.scale).to({x : 1, y : 1}, 1000, Phaser.Easing.Elastic.Out, true);
}

function thumbRoco() {
	roco_zum.visible = true;
	haver_btn.visible = false;
	port_btn.visible = false;
	himeji_btn.visible = false;
	roco_btn.visible = false;
	kb_stars.visible = false;
	
	if ((roco_iszum !== null && roco_iszum.isRunning) || roco_zum.scale.x === 0.5 || roco_zum.scale.y === 0.5) {
		return;
	}
	roco_iszum = this.game.add.roco_iszum(roco_zum.scale).to({x : 1, y : 1}, 1000, Phaser.Easing.Elastic.Out, true);
}


/** 확대사진 클릭시 메시지창 보여주는 함수 */
function haverZoom(item) {
	episodeKey = 'kb_hc';
	kb_confmove.visible = true;
	kb_msgwrite.visible = true;
	kb_nobtn.visible = true;
	kb_yesbtn.visible = true;
	if (item.x == this.game.world.centerX && item.y == this.game.world.centerY) {
		haver_clicked = true;
		haver_zum.visible = false;
		kb_msgwrite.setText("ハーバーランドに行きましょう！", true);
	} 
	else {
		haver_zum.visible = false;
		kb_haver.visible = true;
	}
}

function himejiZoom(item) {
	episodeKey = 'kb_hs';
	kb_confmove.visible = true;
	kb_msgwrite.visible = true;
	kb_nobtn.visible = true;
	kb_yesbtn.visible = true;
	if (item.x == this.game.world.centerX && item.y == this.game.world.centerY) {
		himeji_clicked =  true;
		himeji_zum.visible = false;
		kb_msgwrite.setText("姫路城に行きましょう！", true);
	} 
	else {
		himeji_zum.visible = false;
		kb_himeji.visible = true;
	}
}

function kitanoZoom(item) {
	episodeKey = 'kb_kn';
	kb_confmove.visible = true;
	kb_msgwrite.visible = true;
	kb_nobtn.visible = true;
	kb_yesbtn.visible = true;
	if (item.x == this.game.world.centerX && item.y == this.game.world.centerY) {
		kitano_clicked =  true;
		kitano_zum.visible = false;
		kb_msgwrite.setText("北野異人館に行きましょう！", true);
	} 
	else {
		kitano_zum.visible = false;
		kb_kitano.visible = true;
	}
}

function portZoom(item) {
	episodeKey = 'kb_pt';
	kb_confmove.visible = true;
	kb_msgwrite.visible = true;
	kb_nobtn.visible = true;
	kb_yesbtn.visible = true;
	if (item.x == this.game.world.centerX && item.y == this.game.world.centerY) {
		port_clicked =  true;
		port_zum.visible = false;
		kb_msgwrite.setText("ポートタワーに行きましょう！", true);
	} 
	else {
		port_zum.visible = false;
		kb_port.visible = true;
	}
}

function rocoZoom(item) {
	episodeKey = 'kb_rs';
	kb_confmove.visible = true;
	kb_msgwrite.visible = true;
	kb_nobtn.visible = true;
	kb_yesbtn.visible = true;
	if (item.x == this.game.world.centerX && item.y == this.game.world.centerY) {
		roco_clicked =  true;
		roco_zum.visible = false;
		kb_msgwrite.setText("六甲山に行きましょう！", true);
	} 
	else {
		roco_zum.visible = false;
		kb_roco.visible = true;
	}
}

/* no 버튼 눌렀을 때 */
function kb_cancel() {
	kb_confmove.visible = false;
	kb_msgwrite.visible = false;
	kb_yesbtn.visible = false;
	kb_nobtn.visible = false;
	haver_btn.visible = true;
	port_btn.visible = true;
	himeji_btn.visible = true;
	roco_btn.visible = true;
	kitano_btn.visible = true;
	kb_stars.visible = true;
}

/* yes버튼 눌렀을 때 페이지 이동 함수 */
function kb_changePlace(){
	kb_bgm.pause();
	kb_bgm.destroy(true);
	stageName = "神戸";
	if (himeji_clicked == true) {
		this.game.state.start("fieldModule");
	} 
	else if(kitano_clicked == true) {
		this.game.state.start("fieldModule");
	}
	else if(port_clicked == true){
		this.game.state.start("fieldModule");
	}
	else if(roco_clicked == true){
		this.game.state.start("fieldModule");
	}
	else if(haver_clicked == true){
		this.game.state.start("fieldModule");
	}
	else{
		this.game.state.start("japanMap");
	}
}

function kb_goJapanMap(){
	kb_bgm.pause();
	kb_bgm.destroy(true);
	this.game.state.start("japanMap");
}

// 상점이동페이지
function kb_gotoStore() {
	kb_bgm.pause();
	kb_bgm.destroy(true);
	this.game.state.start("store");
}




/* --- end generated code --- */
// -- user code here --
